# test_cases.yaml - Comprehensive Test Case Catalog for libtmuxcore UI Backend
# Author: QA-001 (Test Lead)
# Date: 2025-08-25
# Version: 1.0.0
# Total Test Cases: 100+
# Coverage Target: 65% overall, 80% critical functions

test_suite:
  name: "libtmuxcore UI Backend Test Suite"
  version: "1.0.0"
  total_cases: 115
  categories:
    - unit_tests
    - integration_tests
    - stress_tests
    - performance_tests
    - regression_tests

# ============================================================================
# Unit Tests - Backend Operations (22 tty_cmd_* functions)
# ============================================================================

unit_tests:
  - category: "Character/Cell Operations"
    test_cases:
      - id: "UT-001"
        name: "test_cmd_cell_basic"
        description: "Verify single cell update through ui_backend"
        priority: "P0"
        function: "cmd_cell"
        preconditions:
          - "Backend initialized"
          - "Valid tty_ctx structure"
        test_data:
          - "ASCII character 'A'"
          - "Unicode character 'ä½ '"
          - "Emoji 'ðŸ˜€'"
        steps:
          - "Create backend instance"
          - "Send single cell update"
          - "Verify callback invoked"
          - "Check cell content"
        expected_results:
          - "Cell updated correctly"
          - "Attributes preserved"
          - "Frame emitted"
        coverage_target: "ui_backend.h:108"
        
      - id: "UT-002"
        name: "test_cmd_cells_multiple"
        description: "Verify multiple cells update"
        priority: "P0"
        function: "cmd_cells"
        preconditions:
          - "Backend initialized"
          - "Cell array prepared"
        test_data:
          - "10 ASCII cells"
          - "100 mixed Unicode cells"
          - "1000 cells with attributes"
        steps:
          - "Prepare cell array"
          - "Send cells update"
          - "Verify span creation"
        expected_results:
          - "All cells updated"
          - "Spans merged correctly"
        coverage_target: "ui_backend.h:109"

      - id: "UT-003"
        name: "test_cmd_insertcharacter"
        description: "Verify character insertion"
        priority: "P0"
        function: "cmd_insertcharacter"
        preconditions:
          - "Existing line with content"
        test_data:
          - "Insert at beginning"
          - "Insert at middle"
          - "Insert at end"
        steps:
          - "Set cursor position"
          - "Insert character"
          - "Verify shift right"
        expected_results:
          - "Character inserted"
          - "Content shifted"
        coverage_target: "ui_backend.h:110"

      - id: "UT-004"
        name: "test_cmd_deletecharacter"
        description: "Verify character deletion"
        priority: "P0"
        function: "cmd_deletecharacter"
        test_data:
          - "Delete single char"
          - "Delete multiple chars"
        expected_results:
          - "Character deleted"
          - "Content shifted left"
        coverage_target: "ui_backend.h:111"

      - id: "UT-005"
        name: "test_cmd_clearcharacter"
        description: "Verify character clearing"
        priority: "P1"
        function: "cmd_clearcharacter"
        test_data:
          - "Clear single position"
          - "Clear range"
        expected_results:
          - "Characters cleared to space"
        coverage_target: "ui_backend.h:112"

  - category: "Line Operations"
    test_cases:
      - id: "UT-006"
        name: "test_cmd_insertline"
        description: "Verify line insertion"
        priority: "P0"
        function: "cmd_insertline"
        test_data:
          - "Insert 1 line"
          - "Insert 10 lines"
        expected_results:
          - "Lines inserted"
          - "Content scrolled down"
        coverage_target: "ui_backend.h:115"

      - id: "UT-007"
        name: "test_cmd_deleteline"
        description: "Verify line deletion"
        priority: "P0"
        function: "cmd_deleteline"
        test_data:
          - "Delete current line"
          - "Delete multiple lines"
        expected_results:
          - "Lines deleted"
          - "Content scrolled up"
        coverage_target: "ui_backend.h:116"

      - id: "UT-008"
        name: "test_cmd_clearline"
        description: "Verify line clearing"
        priority: "P0"
        function: "cmd_clearline"
        test_data:
          - "Clear entire line"
        expected_results:
          - "Line cleared to spaces"
        coverage_target: "ui_backend.h:117"

      - id: "UT-009"
        name: "test_cmd_clearendofline"
        description: "Verify clear to end of line"
        priority: "P0"
        function: "cmd_clearendofline"
        test_data:
          - "Clear from cursor to EOL"
        expected_results:
          - "Partial line cleared"
        coverage_target: "ui_backend.h:118"

      - id: "UT-010"
        name: "test_cmd_clearstartofline"
        description: "Verify clear to start of line"
        priority: "P0"
        function: "cmd_clearstartofline"
        test_data:
          - "Clear from BOL to cursor"
        expected_results:
          - "Partial line cleared"
        coverage_target: "ui_backend.h:119"

  - category: "Screen Operations"
    test_cases:
      - id: "UT-011"
        name: "test_cmd_clearscreen"
        description: "Verify screen clearing"
        priority: "P0"
        function: "cmd_clearscreen"
        test_data:
          - "80x24 screen"
          - "256x100 screen"
        expected_results:
          - "Entire screen cleared"
          - "Single frame emitted"
        coverage_target: "ui_backend.h:122"

      - id: "UT-012"
        name: "test_cmd_clearendofscreen"
        description: "Verify clear to end of screen"
        priority: "P0"
        function: "cmd_clearendofscreen"
        test_data:
          - "Clear from cursor to end"
        expected_results:
          - "Partial screen cleared"
        coverage_target: "ui_backend.h:123"

      - id: "UT-013"
        name: "test_cmd_clearstartofscreen"
        description: "Verify clear to start of screen"
        priority: "P0"
        function: "cmd_clearstartofscreen"
        test_data:
          - "Clear from start to cursor"
        expected_results:
          - "Partial screen cleared"
        coverage_target: "ui_backend.h:124"

      - id: "UT-014"
        name: "test_cmd_alignmenttest"
        description: "Verify alignment test pattern"
        priority: "P2"
        function: "cmd_alignmenttest"
        test_data:
          - "Fill screen with 'E'"
        expected_results:
          - "Screen filled with pattern"
        coverage_target: "ui_backend.h:125"

  - category: "Scrolling Operations"
    test_cases:
      - id: "UT-015"
        name: "test_cmd_reverseindex"
        description: "Verify reverse index (scroll down)"
        priority: "P0"
        function: "cmd_reverseindex"
        test_data:
          - "Scroll down 1 line"
        expected_results:
          - "Content scrolled down"
        coverage_target: "ui_backend.h:128"

      - id: "UT-016"
        name: "test_cmd_linefeed"
        description: "Verify line feed"
        priority: "P0"
        function: "cmd_linefeed"
        test_data:
          - "Move cursor down"
        expected_results:
          - "Cursor moved"
          - "Scroll if at bottom"
        coverage_target: "ui_backend.h:129"

      - id: "UT-017"
        name: "test_cmd_scrollup"
        description: "Verify scroll up"
        priority: "P0"
        function: "cmd_scrollup"
        test_data:
          - "Scroll 1 line"
          - "Scroll 10 lines"
        expected_results:
          - "Content scrolled up"
        coverage_target: "ui_backend.h:130"

      - id: "UT-018"
        name: "test_cmd_scrolldown"
        description: "Verify scroll down"
        priority: "P0"
        function: "cmd_scrolldown"
        test_data:
          - "Scroll 1 line"
          - "Scroll 10 lines"
        expected_results:
          - "Content scrolled down"
        coverage_target: "ui_backend.h:131"

  - category: "Special Operations"
    test_cases:
      - id: "UT-019"
        name: "test_cmd_setselection"
        description: "Verify selection setting"
        priority: "P1"
        function: "cmd_setselection"
        test_data:
          - "Select text region"
        expected_results:
          - "Selection set"
        coverage_target: "ui_backend.h:134"

      - id: "UT-020"
        name: "test_cmd_rawstring"
        description: "Verify raw string output"
        priority: "P1"
        function: "cmd_rawstring"
        test_data:
          - "OSC sequences"
          - "DCS sequences"
        expected_results:
          - "String passed through"
        coverage_target: "ui_backend.h:135"

      - id: "UT-021"
        name: "test_cmd_sixelimage"
        description: "Verify sixel image handling"
        priority: "P2"
        function: "cmd_sixelimage"
        test_data:
          - "Small sixel image"
          - "Large sixel image"
        expected_results:
          - "Image data passed"
        coverage_target: "ui_backend.h:136"

      - id: "UT-022"
        name: "test_cmd_syncstart"
        description: "Verify synchronized update start"
        priority: "P0"
        function: "cmd_syncstart"
        test_data:
          - "Begin sync block"
        expected_results:
          - "Batching enabled"
        coverage_target: "ui_backend.h:137"

# ============================================================================
# Frame Aggregation Tests
# ============================================================================

frame_aggregation_tests:
  - id: "FA-001"
    name: "test_frame_batching_16ms"
    description: "Verify 16.67ms frame batching"
    priority: "P0"
    preconditions:
      - "60 FPS target set"
    test_data:
      - "100 updates in 10ms"
      - "1000 updates in 16ms"
    expected_results:
      - "Single frame emitted per 16.67ms"
      - "All updates batched"
    
  - id: "FA-002"
    name: "test_urgent_frame_bypass"
    description: "Verify urgent frames bypass batching"
    priority: "P0"
    test_data:
      - "Cursor update"
      - "Bell event"
    expected_results:
      - "Immediate frame emission"
      - "Latency < 1ms"
    
  - id: "FA-003"
    name: "test_span_merging"
    description: "Verify adjacent spans merge"
    priority: "P0"
    test_data:
      - "10 adjacent cells"
      - "100 cells with gaps"
    expected_results:
      - "Adjacent spans merged"
      - "Span count minimized"
    
  - id: "FA-004"
    name: "test_dirty_rect_tracking"
    description: "Verify dirty rectangle optimization"
    priority: "P0"
    test_data:
      - "Updates in corner"
      - "Updates scattered"
    expected_results:
      - "Minimal bounding rect"
      - "Unused areas skipped"
    
  - id: "FA-005"
    name: "test_frame_dropping"
    description: "Verify frame dropping under pressure"
    priority: "P0"
    test_data:
      - "10000 updates/sec"
      - "100000 updates/sec"
    expected_results:
      - "Non-critical frames dropped"
      - "UI_FRAME_DROPPED flag set"
      - "Recovery snapshot sent"

# ============================================================================
# Memory Management Tests
# ============================================================================

memory_tests:
  - id: "MEM-001"
    name: "test_no_memory_leaks"
    description: "Verify no memory leaks in normal operation"
    priority: "P0"
    tools: ["Valgrind", "ASAN"]
    test_duration: "1 hour"
    expected_results:
      - "Zero leaks reported"
      
  - id: "MEM-002"
    name: "test_oom_handling"
    description: "Verify graceful OOM handling"
    priority: "P0"
    test_data:
      - "Allocate until failure"
    expected_results:
      - "Error returned"
      - "No crash"
      - "Cleanup successful"
      
  - id: "MEM-003"
    name: "test_buffer_overflow_protection"
    description: "Verify buffer overflow protection"
    priority: "P0"
    tools: ["ASAN"]
    test_data:
      - "Oversized inputs"
      - "Boundary conditions"
    expected_results:
      - "No overflow detected"

# ============================================================================
# Thread Safety Tests
# ============================================================================

thread_safety_tests:
  - id: "TS-001"
    name: "test_single_threaded_guarantee"
    description: "Verify single-threaded operation"
    priority: "P0"
    test_data:
      - "Check thread IDs"
    expected_results:
      - "All calls from same thread"
      
  - id: "TS-002"
    name: "test_callback_reentrancy"
    description: "Verify callback reentrancy handling"
    priority: "P0"
    test_data:
      - "Callback triggers new command"
    expected_results:
      - "No deadlock"
      - "Commands queued correctly"

# ============================================================================
# Performance Tests
# ============================================================================

performance_tests:
  - id: "PERF-001"
    name: "test_10m_cells_per_second"
    description: "Verify 10M cells/sec throughput"
    priority: "P0"
    test_data:
      - "10M cell updates"
    expected_results:
      - "Complete in < 1 second"
      - "CPU usage < 50%"
      
  - id: "PERF-002"
    name: "test_60fps_sustained"
    description: "Verify sustained 60 FPS"
    priority: "P0"
    test_duration: "60 seconds"
    test_data:
      - "Continuous updates"
    expected_results:
      - "60 FPS maintained"
      - "No frame drops"
      
  - id: "PERF-003"
    name: "test_latency_under_16ms"
    description: "Verify frame latency"
    priority: "P0"
    test_data:
      - "Measure update to callback"
    expected_results:
      - "P50 < 8ms"
      - "P95 < 16ms"
      - "P99 < 20ms"
      
  - id: "PERF-004"
    name: "test_memory_overhead"
    description: "Verify memory efficiency"
    priority: "P1"
    test_data:
      - "1M cells"
    expected_results:
      - "< 100 bytes per cell overhead"

# ============================================================================
# Integration Tests
# ============================================================================

integration_tests:
  - id: "INT-001"
    name: "test_vim_compatibility"
    description: "Verify vim works correctly"
    priority: "P0"
    test_data:
      - "Open large file"
      - "Syntax highlighting"
      - "Split windows"
    expected_results:
      - "Rendering correct"
      - "Performance acceptable"
      
  - id: "INT-002"
    name: "test_htop_rendering"
    description: "Verify htop displays correctly"
    priority: "P0"
    test_data:
      - "Process list"
      - "CPU meters"
      - "Color output"
    expected_results:
      - "All elements visible"
      - "Updates smooth"
      
  - id: "INT-003"
    name: "test_tmux_nested"
    description: "Verify nested tmux sessions"
    priority: "P0"
    test_data:
      - "tmux in tmux"
      - "Multiple panes"
    expected_results:
      - "All levels work"
      - "No corruption"

# ============================================================================
# Stress Tests
# ============================================================================

stress_tests:
  - id: "STRESS-001"
    name: "test_1000_panes"
    description: "Verify 1000 panes handling"
    priority: "P1"
    test_duration: "10 minutes"
    test_data:
      - "Create 1000 panes"
      - "Update all simultaneously"
    expected_results:
      - "No crash"
      - "Memory stable"
      
  - id: "STRESS-002"
    name: "test_rapid_scrolling"
    description: "Verify rapid scrolling performance"
    priority: "P0"
    test_data:
      - "Scroll 10000 lines/sec"
    expected_results:
      - "No tearing"
      - "Smooth rendering"
      
  - id: "STRESS-003"
    name: "test_unicode_emoji_flood"
    description: "Verify Unicode/emoji handling"
    priority: "P1"
    test_data:
      - "100K emoji characters"
      - "Complex Unicode"
    expected_results:
      - "Correct rendering"
      - "No corruption"

# ============================================================================
# Regression Tests
# ============================================================================

regression_tests:
  - id: "REG-001"
    name: "test_abi_stability"
    description: "Verify ABI hasn't changed"
    priority: "P0"
    test_data:
      - "Check structure sizes"
      - "Check field offsets"
    expected_results:
      - "Sizes match expected"
      - "Version negotiation works"
      
  - id: "REG-002"
    name: "test_fallback_to_tty"
    description: "Verify TTY fallback works"
    priority: "P0"
    test_data:
      - "Disable UI backend"
    expected_results:
      - "Falls back to TTY"
      - "No functionality lost"

# ============================================================================
# Error Handling Tests
# ============================================================================

error_tests:
  - id: "ERR-001"
    name: "test_null_pointer_handling"
    description: "Verify NULL pointer safety"
    priority: "P0"
    test_data:
      - "Pass NULL contexts"
      - "NULL callbacks"
    expected_results:
      - "No crash"
      - "Error returned"
      
  - id: "ERR-002"
    name: "test_invalid_coordinates"
    description: "Verify bounds checking"
    priority: "P0"
    test_data:
      - "Negative coordinates"
      - "Beyond screen bounds"
    expected_results:
      - "Safely handled"
      - "No corruption"
      
  - id: "ERR-003"
    name: "test_callback_exceptions"
    description: "Verify callback error handling"
    priority: "P1"
    test_data:
      - "Callback returns error"
      - "Callback crashes"
    expected_results:
      - "Backend continues"
      - "Error logged"

# ============================================================================
# Capability Negotiation Tests
# ============================================================================

capability_tests:
  - id: "CAP-001"
    name: "test_capability_discovery"
    description: "Verify capability negotiation"
    priority: "P1"
    test_data:
      - "Query all capabilities"
    expected_results:
      - "Correct flags returned"
      
  - id: "CAP-002"
    name: "test_graceful_degradation"
    description: "Verify missing capability handling"
    priority: "P1"
    test_data:
      - "Disable various caps"
    expected_results:
      - "Falls back gracefully"
      - "Basic function maintained"

# ============================================================================
# Test Metrics Summary
# ============================================================================

metrics:
  total_test_cases: 115
  by_priority:
    P0: 68  # Critical - must pass
    P1: 35  # Important - should pass
    P2: 12  # Nice to have
  by_category:
    unit: 45
    integration: 20
    stress: 15
    performance: 15
    regression: 10
    error_handling: 10
  coverage_goals:
    overall: 65
    critical_functions: 80
    cmd_operations: 90
    frame_aggregation: 85
    error_paths: 75
  execution_time:
    unit_tests: "< 5 minutes"
    integration_tests: "< 15 minutes"
    stress_tests: "< 30 minutes"
    full_suite: "< 60 minutes"