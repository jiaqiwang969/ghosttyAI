@startuml component-interaction
!theme plain
title Component Interaction Diagram

skinparam componentStyle rectangle
skinparam defaultTextAlignment center

package "User Interface Layer" {
    component [Ghostty Window] as Window #LightBlue
    component [Split View Manager] as SplitMgr #LightBlue
    component [Tab Manager] as TabMgr #LightBlue
}

package "Rendering Layer" {
    component [Terminal Buffer] as TermBuf #Cyan
    component [GPU Pipeline] as GPUPipe #Cyan
    component [Font Shaper] as FontShape #Cyan
    component [Compositor] as Comp #Cyan
}

package "Integration Bridge" {
    component [Ghostty-tmux Bridge] as Bridge #LightGreen
    component [Callback Router] as Router #LightGreen
    component [State Synchronizer] as StateSync #LightGreen
    component [Input Translator] as InputTrans #LightGreen
}

package "libtmuxcore API" {
    interface "tmc_server_new()" as API1
    interface "tmc_client_attach()" as API2
    interface "tmc_send_keys()" as API3
    interface "tmc_send_text()" as API4
    interface "tmc_command()" as API5
    interface "tmc_pane_snapshot()" as API6
}

package "tmux Core Components" {
    component [Server Core] as Core #LightYellow
    component [Session Manager] as SessionMgr #LightYellow
    component [Window Tree] as WinTree #LightYellow
    component [Pane Grid] as PaneGrid #LightYellow
    component [Command Parser] as CmdParse #LightYellow
    component [Process Manager] as ProcMgr #LightYellow
}

package "Backend System" {
    component [UI Backend Router] as BackRouter #Orange
    component [Grid Aggregator] as GridAgg #Orange
    component [Layout Processor] as LayoutProc #Orange
    component [Event Dispatcher] as EventDisp #Orange
}

' User interaction flow
Window --> InputTrans : User Input
InputTrans --> API3 : Translated Keys
API3 --> Core : Process Input

' Rendering flow
BackRouter --> Router : Grid Updates
Router --> StateSync : Process Updates
StateSync --> TermBuf : Apply Changes
TermBuf --> FontShape : Shape Text
FontShape --> GPUPipe : Render Glyphs
GPUPipe --> Comp : Composite
Comp --> Window : Display

' Layout management
WinTree --> LayoutProc : Layout Changes
LayoutProc --> Router : Layout Events
Router --> SplitMgr : Update Splits
SplitMgr --> Window : Redraw

' Session management
TabMgr --> Bridge : Tab Operations
Bridge --> API2 : Attach/Detach
API2 --> SessionMgr : Manage Sessions

' Command execution
Window --> Bridge : User Commands
Bridge --> API5 : Execute Command
API5 --> CmdParse : Parse
CmdParse --> Core : Execute

' Grid updates
PaneGrid --> GridAgg : Cell Changes
GridAgg --> BackRouter : Aggregated Spans
BackRouter --> EventDisp : Dispatch Events

' Process management
Core --> ProcMgr : Spawn/Monitor
ProcMgr --> PaneGrid : PTY Output

note right of BackRouter
  Central routing point
  for all UI updates
end note

note bottom of Bridge
  Main integration point
  between Ghostty and tmux
end note

@enduml